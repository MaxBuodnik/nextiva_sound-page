{
  "_args": [
    [
      {
        "raw": "react-body-images",
        "scope": null,
        "escapedName": "react-body-images",
        "name": "react-body-images",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Max/projects/weather"
    ]
  ],
  "_from": "react-body-images@latest",
  "_id": "react-body-images@1.0.1",
  "_inCache": true,
  "_location": "/react-body-images",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-body-images-1.0.1.tgz_1488573407090_0.8409894437063485"
  },
  "_npmUser": {
    "name": "npm.ideasmx",
    "email": "3kgven@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-body-images",
    "scope": null,
    "escapedName": "react-body-images",
    "name": "react-body-images",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-body-images/-/react-body-images-1.0.1.tgz",
  "_shasum": "29a7627f3f425250f23d3f5095ba50dc87e9edca",
  "_shrinkwrap": null,
  "_spec": "react-body-images",
  "_where": "/Users/Max/projects/weather",
  "author": {
    "name": "Erik Gooven",
    "email": "3kgven@gmail.com",
    "url": "https://github.com/IdeasMX01"
  },
  "bugs": {
    "url": "https://github.com/IdeasMX01/react-body-images/issues"
  },
  "dependencies": {
    "react-side-effect": "^1.0.0"
  },
  "description": "A way to add one background image to body, or create body background slider. Based on Iestyn William's project react-body-className. So, you can manipulate your body's className too",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "global": "^4.3.0",
    "jshint": "^2.5.6",
    "mocha": "^2.0.1",
    "react": "^0.13.0"
  },
  "directories": {},
  "dist": {
    "shasum": "29a7627f3f425250f23d3f5095ba50dc87e9edca",
    "tarball": "https://registry.npmjs.org/react-body-images/-/react-body-images-1.0.1.tgz"
  },
  "gitHead": "5c300cdaa0242b2f7046cdcf98da6512d6a4eed5",
  "homepage": "https://github.com/IdeasMX01/react-body-images",
  "keywords": [
    "react",
    "component",
    "react-component",
    "body.className",
    "background-image",
    "background-url",
    "transitions",
    "title",
    "jsx"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "npm.ideasmx",
      "email": "3kgven@gmail.com"
    }
  ],
  "name": "react-body-images",
  "optionalDependencies": {},
  "readme": "React Body Images\n====================\n\nA way to add one background image to body, or create body background slider in a single-page app. Based on Iestyn William's project react-body-className. So, you can manipulate your body's className too\n\nThis component can be use the className feature on server side as well.\n\nBuilt with [React Side Effect](https://github.com/gaearon/react-side-effect).\n\n====================\n\n## Installation\n\n```\nnpm install --save react-body-images\n```\n\nDependencies: React >= 0.13.0\n\n## Features\n\n* Does not emit DOM, not even a `<noscript>`;\n* Like a normal React compoment, can use its parent's `props` and `state`;\n* Can be defined in many places throughout the application;\n* Supports arbitrary levels of nesting, combining each className;\n* Works just as well with isomorphic apps.\n\n## Example\n\n\n\n![Example](example.jpg)\n\n```jsx\nclass SomeComponent {\n  render() {\n    // This will add an array of background images to the body\n\t// And add className 'home' too\n\t// You should put the path to the image in the array.\n\t// var images = [\"/img/image1.jpg\",\"/img/image2.jpg\"];\n\t// If this is a nested component you can specify if you want to show the background images or not using removeBackgroundImages property.\n\t// If removeBackgroundImages is true in a nested component, the background images are the specified by the main Component.\n    return (\n      <BodyImages className='home' bgImageArray={this.state.images} transitionSeconds={15} removeBackgroundImages{true/false}>\n        <h1>Hogar, dulce hogar.</h1>\n      </BodyImages>\n    );\n  }\n}\n\nclass App {\n  render() {\n    // This will add an array of background images to the body\n\t// And add className 'app' too\n\t// You should put the path to the image in the array.\n\t// var images = [\"/img/image1.jpg\",\"/img/image2.jpg\"];\n\t// If you want to see in the console debug comments you can specify that using inDebugMode property.\n    return (\n      <BodyImages className='app' bgImageArray={this.state.images} transitionSeconds={15} inDebugMode={true}>\n        <SomeComponent/>\n      </BodyImages>\n    );\n    // Becuase we nested the component, our body will now replace the background images especified in SomeComponent and have the 'app home' as the class name\n  }\n}\n```\n\nUse CSS modules with webpack or similar?\n\n```jsx\nimport styles from './some.css';\n\nclass Thing {\n  render() {\n\t// You should put the path to the image in the array.\n\t// var images = [\"/img/image1.jpg\",\"/img/image2.jpg\"];\n    return (\n\t  <BodyImages className={styles.body} bgImageArray={this.state.images} transitionSeconds={15}>\n        <h1>CSS modules rock!</h1>\n      </BodyImages>\n    );\n  }\n}\n```\n\nIf you need to remove the background:\n\n```jsx\nimport styles from './some.css';\n\nclass Thing {\n  render() {\n    return (\n\t  <BodyImages className={styles.body} removeBackgroundImages={true}>\n        <h1>CSS modules rock!</h1>\n      </BodyImages>\n    );\n  }\n}\n```\n\n\n## Server Usage\n\nIf you use it on server the className feature , call `BodyClassName.rewind()` **after rendering components to string** to retrieve the combined class name. You can then embed this className into HTML page template.\n\nBecause this component keeps track of mounted instances, **you have to make sure to call `rewind` on server**, or you'll get a memory leak.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/IdeasMX01/react-body-images.git"
  },
  "scripts": {
    "lint": "jshint index.js test",
    "test": "mocha",
    "test:watch": "npm run test -- --watch"
  },
  "version": "1.0.1"
}
